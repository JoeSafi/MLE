// <auto-generated />
using System;
using MLEFIN.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MLEFIN.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("joe")
                .HasAnnotation("ProductVersion", "9.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MLEFIN.Models.BankTransaction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Account")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("CheckNumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("CompanyCategoryID")
                        .HasColumnType("int");

                    b.Property<int?>("CompanyID")
                        .HasColumnType("int");

                    b.Property<string>("DepositType")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Payee")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Payer")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("TransactionDate")
                        .HasColumnType("date")
                        .HasColumnName("TransactionDate");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CheckNumber");

                    b.HasIndex("CompanyCategoryID");

                    b.HasIndex("CompanyID");

                    b.HasIndex("DepositType");

                    b.HasIndex("Payer");

                    b.ToTable("BankTransactions", "joe");
                });

            modelBuilder.Entity("MLEFIN.Models.Company", b =>
                {
                    b.Property<int>("CompanyID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CompanyID"));

                    b.Property<string>("Address")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<decimal?>("CardNumberDecimal")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("CardNumber");

                    b.Property<bool>("CardOnFile")
                        .HasColumnType("bit");

                    b.Property<bool>("Cash")
                        .HasColumnType("bit");

                    b.Property<string>("CellPhone")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<bool>("Check")
                        .HasColumnType("bit");

                    b.Property<int>("CompanyCategoryID")
                        .HasColumnType("int");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ContactName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PaymentTerms")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("CompanyID");

                    b.HasIndex("CompanyCategoryID");

                    b.ToTable("Company", "joe");
                });

            modelBuilder.Entity("MLEFIN.Models.CompanyCategory", b =>
                {
                    b.Property<int>("CompanyCategoryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CompanyCategoryID"));

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("CompanyCategoryID");

                    b.ToTable("CompanyCategory", "joe");
                });

            modelBuilder.Entity("MLEFIN.Models.Part", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal?>("AverageCost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Category")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("CurrentCost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<decimal?>("ListPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Notes")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("PartNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("PartNumber")
                        .IsUnique()
                        .HasFilter("[IsActive] = 1");

                    b.ToTable("Parts", "joe");
                });

            modelBuilder.Entity("MLEFIN.Models.Sales", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("AutoRepair")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Bank")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("CarCount")
                        .HasColumnType("int");

                    b.Property<decimal>("Cash")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Lube")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("OtherSales")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("SalesDate")
                        .HasColumnType("date")
                        .HasColumnName("SalesDate");

                    b.Property<decimal>("Tax")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Tires")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("SalesDate")
                        .IsUnique();

                    b.ToTable("Sales", "joe");
                });

            modelBuilder.Entity("MLEFIN.Models.VendorCore", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("CoreAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("CoreDate")
                        .HasColumnType("date")
                        .HasColumnName("CoreDate");

                    b.Property<string>("CoreNumber")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("CreditAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("CreditedDate")
                        .HasColumnType("date")
                        .HasColumnName("CreditedDate");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Notes")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime?>("ShippedDate")
                        .HasColumnType("date")
                        .HasColumnName("ShippedDate");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("TrackingNumber")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("VendorCompanyID")
                        .HasColumnType("int");

                    b.Property<int>("VendorInvoiceID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("VendorCompanyID");

                    b.HasIndex("VendorInvoiceID");

                    b.ToTable("VendorCores", "joe");
                });

            modelBuilder.Entity("MLEFIN.Models.VendorInvoice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("DiscountAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("DueDate")
                        .HasColumnType("date")
                        .HasColumnName("DueDate");

                    b.Property<bool>("HasCore")
                        .HasColumnType("bit");

                    b.Property<bool>("HasParts")
                        .HasColumnType("bit");

                    b.Property<bool>("HasWarranty")
                        .HasColumnType("bit");

                    b.Property<DateTime>("InvoiceDate")
                        .HasColumnType("date")
                        .HasColumnName("InvoiceDate");

                    b.Property<string>("InvoiceNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Notes")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("PONumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Reference")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("ShippingAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<decimal>("SubTotal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TaxAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("VendorCompanyID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("VendorCompanyID", "InvoiceNumber")
                        .IsUnique();

                    b.ToTable("VendorInvoices", "joe");
                });

            modelBuilder.Entity("MLEFIN.Models.VendorInvoiceItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Cost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("PartNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("VendorInvoiceID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("VendorInvoiceID");

                    b.ToTable("VendorInvoiceItems", "joe");
                });

            modelBuilder.Entity("MLEFIN.Models.VendorInvoicePayment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("AllocationAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("VendorInvoiceID")
                        .HasColumnType("int");

                    b.Property<int>("VendorPaymentID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("VendorPaymentID");

                    b.HasIndex("VendorInvoiceID", "VendorPaymentID")
                        .IsUnique();

                    b.ToTable("VendorInvoicePayments", "joe");
                });

            modelBuilder.Entity("MLEFIN.Models.VendorPayment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("BankTransactionID")
                        .HasColumnType("int");

                    b.Property<string>("CheckNumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Notes")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime>("PaymentDate")
                        .HasColumnType("date")
                        .HasColumnName("PaymentDate");

                    b.Property<string>("PaymentMethod")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ReferenceNumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("VendorCompanyID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BankTransactionID");

                    b.HasIndex("VendorCompanyID");

                    b.ToTable("VendorPayments", "joe");
                });

            modelBuilder.Entity("MLEFIN.Models.VendorReturn", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("CreditAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("HasParts")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Notes")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime?>("ProcessedDate")
                        .HasColumnType("date")
                        .HasColumnName("ProcessedDate");

                    b.Property<string>("RMANumber")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Reason")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime>("ReturnDate")
                        .HasColumnType("date")
                        .HasColumnName("ReturnDate");

                    b.Property<string>("ReturnNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("ShippingAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<decimal>("SubTotal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TaxAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("VendorCompanyID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("VendorCompanyID", "ReturnNumber")
                        .IsUnique();

                    b.ToTable("VendorReturns", "joe");
                });

            modelBuilder.Entity("MLEFIN.Models.VendorReturnItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Cost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("PartNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<string>("Reason")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("VendorReturnID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("VendorReturnID");

                    b.ToTable("VendorReturnItems", "joe");
                });

            modelBuilder.Entity("MLEFIN.Models.VendorWarranty", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("CreditAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Notes")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime?>("ResolutionDate")
                        .HasColumnType("date")
                        .HasColumnName("ResolutionDate");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("VendorCompanyID")
                        .HasColumnType("int");

                    b.Property<int>("VendorInvoiceID")
                        .HasColumnType("int");

                    b.Property<string>("WarrantyClaimNumber")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("WarrantyDate")
                        .HasColumnType("date")
                        .HasColumnName("WarrantyDate");

                    b.HasKey("Id");

                    b.HasIndex("VendorCompanyID");

                    b.HasIndex("VendorInvoiceID");

                    b.ToTable("VendorWarranties", "joe");
                });

            modelBuilder.Entity("MLEFIN.Models.BankTransaction", b =>
                {
                    b.HasOne("MLEFIN.Models.CompanyCategory", "CompanyCategory")
                        .WithMany("BankTransactions")
                        .HasForeignKey("CompanyCategoryID")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("MLEFIN.Models.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyID")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Company");

                    b.Navigation("CompanyCategory");
                });

            modelBuilder.Entity("MLEFIN.Models.Company", b =>
                {
                    b.HasOne("MLEFIN.Models.CompanyCategory", "Category")
                        .WithMany()
                        .HasForeignKey("CompanyCategoryID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("MLEFIN.Models.VendorCore", b =>
                {
                    b.HasOne("MLEFIN.Models.Company", "VendorCompany")
                        .WithMany()
                        .HasForeignKey("VendorCompanyID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("MLEFIN.Models.VendorInvoice", "VendorInvoice")
                        .WithMany()
                        .HasForeignKey("VendorInvoiceID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("VendorCompany");

                    b.Navigation("VendorInvoice");
                });

            modelBuilder.Entity("MLEFIN.Models.VendorInvoice", b =>
                {
                    b.HasOne("MLEFIN.Models.Company", "VendorCompany")
                        .WithMany()
                        .HasForeignKey("VendorCompanyID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("VendorCompany");
                });

            modelBuilder.Entity("MLEFIN.Models.VendorInvoiceItem", b =>
                {
                    b.HasOne("MLEFIN.Models.VendorInvoice", "VendorInvoice")
                        .WithMany()
                        .HasForeignKey("VendorInvoiceID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("VendorInvoice");
                });

            modelBuilder.Entity("MLEFIN.Models.VendorInvoicePayment", b =>
                {
                    b.HasOne("MLEFIN.Models.VendorInvoice", "VendorInvoice")
                        .WithMany()
                        .HasForeignKey("VendorInvoiceID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MLEFIN.Models.VendorPayment", "VendorPayment")
                        .WithMany()
                        .HasForeignKey("VendorPaymentID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("VendorInvoice");

                    b.Navigation("VendorPayment");
                });

            modelBuilder.Entity("MLEFIN.Models.VendorPayment", b =>
                {
                    b.HasOne("MLEFIN.Models.BankTransaction", "BankTransaction")
                        .WithMany()
                        .HasForeignKey("BankTransactionID")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("MLEFIN.Models.Company", "VendorCompany")
                        .WithMany()
                        .HasForeignKey("VendorCompanyID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("BankTransaction");

                    b.Navigation("VendorCompany");
                });

            modelBuilder.Entity("MLEFIN.Models.VendorReturn", b =>
                {
                    b.HasOne("MLEFIN.Models.Company", "VendorCompany")
                        .WithMany()
                        .HasForeignKey("VendorCompanyID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("VendorCompany");
                });

            modelBuilder.Entity("MLEFIN.Models.VendorReturnItem", b =>
                {
                    b.HasOne("MLEFIN.Models.VendorReturn", "VendorReturn")
                        .WithMany()
                        .HasForeignKey("VendorReturnID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("VendorReturn");
                });

            modelBuilder.Entity("MLEFIN.Models.VendorWarranty", b =>
                {
                    b.HasOne("MLEFIN.Models.Company", "VendorCompany")
                        .WithMany()
                        .HasForeignKey("VendorCompanyID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("MLEFIN.Models.VendorInvoice", "VendorInvoice")
                        .WithMany()
                        .HasForeignKey("VendorInvoiceID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("VendorCompany");

                    b.Navigation("VendorInvoice");
                });

            modelBuilder.Entity("MLEFIN.Models.CompanyCategory", b =>
                {
                    b.Navigation("BankTransactions");
                });
#pragma warning restore 612, 618
        }
    }
}
